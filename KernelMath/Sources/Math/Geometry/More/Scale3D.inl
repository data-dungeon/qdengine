//=============================================================================
// CODE STARTS HERE
//=============================================================================
/*


//-----------------------------------------------------------------------------
//	Name:		SCALE3D constructor
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
SCALE3D::SCALE3D()
{
	_V.fVec[_X_] = 1.0f;
	_V.fVec[_Y_] = 1.0f;
	_V.fVec[_Z_] = 1.0f;
}

//-----------------------------------------------------------------------------
//	Name:		SCALE3D constructor
//	Object:		
//	03-10-28:	VMA - Created
//-----------------------------------------------------------------------------
SCALE3D::SCALE3D( const bool bFlagInit )
{
	QDT_ASSERT( bFlagInit == false );
}

//-----------------------------------------------------------------------------
//	Name:		SCALE3D constructor
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
SCALE3D::SCALE3D( const SCALE3D & Scale3D )
{
	Set( Scale3D );
}

//-----------------------------------------------------------------------------
//	Name:		operator=
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
const SCALE3D & SCALE3D::operator=( const SCALE3D & Sca )
{
	return SlowAssign(Sca);
}

//-----------------------------------------------------------------------------
//	Name:		SlowAssign
//	Object:		
//	03-04-03:	SBE - Created
//-----------------------------------------------------------------------------
const SCALE3D & SCALE3D::SlowAssign( const SCALE3D & Sca )
{
	if ( this != & Sca )
	{
		SlowSet( Sca );
	}

	return ( *this );
}

//-----------------------------------------------------------------------------
//	Name: SCALE3D::operator 
//	Object: 
//	01-06-25:	GGO - Created
//-----------------------------------------------------------------------------
bool	SCALE3D::operator ==(const SCALE3D& Sca) const
{
	return ( ( MATH::EqualsEpsilon( _V.fVec[_X_], Sca[_X_] ) == true ) &&
			 ( MATH::EqualsEpsilon( _V.fVec[_Y_], Sca[_Y_] ) == true ) &&
			 ( MATH::EqualsEpsilon( _V.fVec[_Z_], Sca[_Z_] ) == true ) );
}


//-----------------------------------------------------------------------------
//	Name: SCALE3D::operator 
//	Object: 
//	01-06-25:	GGO - Created
//-----------------------------------------------------------------------------
bool	SCALE3D::operator !=(const SCALE3D& Sca) const
{
	return ( ( MATH::EqualsEpsilon( _V.fVec[_X_], Sca[_X_] ) == false ) ||
			 ( MATH::EqualsEpsilon( _V.fVec[_Y_], Sca[_Y_] ) == false ) ||
			 ( MATH::EqualsEpsilon( _V.fVec[_Z_], Sca[_Z_] ) == false ) );
}

//-----------------------------------------------------------------------------
//	Name:		operator[]
//	Object:		
//	03-01-10:	SBE - Created
//-----------------------------------------------------------------------------
float	SCALE3D::operator[](const unsigned int	i) const
{
	QDT_ASSERT(i<3);
	return _V.fVec[i];
}

//-----------------------------------------------------------------------------
//	Name:		operator[]
//	Object:		
//	03-01-10:	SBE - Created
//-----------------------------------------------------------------------------
float &	SCALE3D::operator[](const unsigned int	i)
{
	QDT_ASSERT(i<3);
	return _V.fVec[i];
}

//-----------------------------------------------------------------------------
//	Name:		SCALE3D constructor
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
SCALE3D::SCALE3D( const float rX,
				  const float rY,
				  const float rZ )
{
	_V.fVec[_X_] = rX;
	_V.fVec[_Y_] = rY;
	_V.fVec[_Z_] = rZ;
}


//-----------------------------------------------------------------------------
//	Name:		Build
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
void	SCALE3D::Set( const SCALE3D & Scale3D )
{
	SlowSet(Scale3D);
}

//-----------------------------------------------------------------------------
//	Name:		SlowSet
//	Object:		
//	03-04-03:	SBE - Modified
//-----------------------------------------------------------------------------
void	SCALE3D::SlowSet( const SCALE3D & Scale3D )
{
	_V.fVec[_X_] = Scale3D[_X_];
	_V.fVec[_Y_] = Scale3D[_Y_];
	_V.fVec[_Z_] = Scale3D[_Z_];
}



//-----------------------------------------------------------------------------
//	Name:		Build
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
void	SCALE3D::SetXYZ( const float rX,
					     const float rY,
					     const float rZ )
{
	_V.fVec[_X_] = rX;
	_V.fVec[_Y_] = rY;
	_V.fVec[_Z_] = rZ;
}


//-----------------------------------------------------------------------------
//	Name:		GetXYZ
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
void	SCALE3D::GetXYZ( float & rXX , float & rYY , float & rZZ ) const
{
	rXX = _V.fVec[_X_];
	rYY = _V.fVec[_Y_];
	rZZ = _V.fVec[_Z_];
}


//-----------------------------------------------------------------------------
//	Name:		GetX
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
float	SCALE3D::GetX() const
{
	return ( _V.fVec[_X_] );
}


//-----------------------------------------------------------------------------
//	Name:		GetY
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
float	SCALE3D::GetY() const
{
	return ( _V.fVec[_Y_] );
}


//-----------------------------------------------------------------------------
//	Name:		GetZ
//	Object:		
//	01-01-16:	RPA - Created
//-----------------------------------------------------------------------------
float	SCALE3D::GetZ() const
{
	return ( _V.fVec[_Z_] );
}
//-----------------------------------------------------------------------------
//	Name:		SetX
//	Object:		
//	01-04-13:	GHP - Created
//-----------------------------------------------------------------------------
void SCALE3D::SetX( const float& rVal )
{
	_V.fVec[_X_] = rVal ;
}
//-----------------------------------------------------------------------------
//	Name:		SetY
//	Object:		
//	01-04-13:	GHP - Created
//-----------------------------------------------------------------------------
void SCALE3D::SetY( const float& rVal )
{
	_V.fVec[_Y_] = rVal ;
}
//-----------------------------------------------------------------------------
//	Name:		SetZ
//	Object:		
//	01-04-13:	GHP - Created
//-----------------------------------------------------------------------------
void SCALE3D::SetZ( const float& rVal )
{
	_V.fVec[_Z_]  = rVal ; 
}

//-----------------------------------------------------------------------------
//	Name:		ToPointer
//	Object:		
//	02-06-14:	JLT - Created
//-----------------------------------------------------------------------------
_INLINE_ const float* SCALE3D::ToPointer() const
{
	return (&_V.fVec[_X_]);
}

//-----------------------------------------------------------------------------
//	Name:		ToPointer
//	Object:		
//	02-06-14:	JLT - Created
//-----------------------------------------------------------------------------
_INLINE_ float* SCALE3D::ToPointer()
{
	return (&_V.fVec[_X_]);
}*/

//=============================================================================
// CODE ENDS HERE
//=============================================================================
