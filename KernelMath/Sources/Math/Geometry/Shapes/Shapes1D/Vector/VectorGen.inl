//=============================================================================
// CODE STARTS HERE
//=============================================================================

//-----------------------------------------------------------------------------
//	Name:		ConstructGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::ConstructGen(const VECTOR &	V)
{
	SlowCopy(V);
}

//-----------------------------------------------------------------------------
//	Name:		ConstructGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::ConstructGen(const float	rVx,
							 const float	rVy,
							 const float	rVz)
{
	SetXYZ(rVx, rVy, rVz);
}

//-----------------------------------------------------------------------------
//	Name:		InterpolateGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::InterpolateGen(float	rT,
							   const VECTOR &	V1,
							   const VECTOR &	V2)
{
	VECTOR_GET_GENERIC_DATA();

	_r[_X_] = V1[_X_] + rT * ( V2[_X_] - V1[_X_] );
	_r[_Y_] = V1[_Y_] + rT * ( V2[_Y_] - V1[_Y_] );
	_r[_Z_] = V1[_Z_] + rT * ( V2[_Z_] - V1[_Z_] );
}

//-----------------------------------------------------------------------------
//	Name:		Assign
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR &	VECTOR::AssignGen(const VECTOR &	Vector)
{
	return	(SlowAssign(Vector));
}

//-----------------------------------------------------------------------------
//	Name:		Copy
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::CopyGen(const VECTOR &	V)
{
	SlowCopy(V);
}

//-----------------------------------------------------------------------------
//	Name:		LengthGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
float	VECTOR::LengthGen() const
{
	return	(SlowLength());
}

//-----------------------------------------------------------------------------
//	Name:		SquareLengthGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
float	VECTOR::SquareLengthGen() const
{
	return	(SlowSquareLength());
}

//-----------------------------------------------------------------------------
//	Name:		AbsoluteGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::AbsoluteGen()
{
	VECTOR_GET_GENERIC_DATA();

	// To optimize for VU0 !!
	if (_r[_X_] < 0.0f) _r[_X_] = -_r[_X_];
	if (_r[_Y_] < 0.0f) _r[_Y_] = -_r[_Y_];
	if (_r[_Z_] < 0.0f) _r[_Z_] = -_r[_Z_];
}

//-----------------------------------------------------------------------------
//	Name:		AddMulGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::AddMulGen(const VECTOR &	V,
						  float				r)
{
	VECTOR Temp(V);
	Temp.Mul(r);
	Add(Temp);
}

//-----------------------------------------------------------------------------
//	Name:		AddGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::AddGen(const VECTOR &	p,
					   const float		s)
{
	SlowAdd(p, s);
}

//-----------------------------------------------------------------------------
//	Name:		AddGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::AddGen(const VECTOR &	V1,
					   const VECTOR &	V2)
{
	SlowAdd(V1, V2);
}

//-----------------------------------------------------------------------------
//	Name:		AddGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::AddGen(const VECTOR &	V)
{
	SlowAdd(V);
}

//-----------------------------------------------------------------------------
//	Name:		AddGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::AddGen(float	r)
{
	SlowAdd(r);
}

//-----------------------------------------------------------------------------
//	Name:		SubGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::SubGen(const VECTOR &	V1,
					   const VECTOR &	V2)
{
	SlowSub(V1, V2);
}

//-----------------------------------------------------------------------------
//	Name:		SubGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::SubGen(const VECTOR &	V)
{
	SlowSub(V);
}

//-----------------------------------------------------------------------------
//	Name:		SubGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::SubGen(float	r)
{
	SlowSub(r);
}

//-----------------------------------------------------------------------------
//	Name:		NegGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::NegGen(const VECTOR &	V)
{
	SlowNeg(V);
}

//-----------------------------------------------------------------------------
//	Name:		NegGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::NegGen()
{
	SlowNeg();
}

//-----------------------------------------------------------------------------
//	Name:		MulGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::MulGen(const VECTOR &	V,
					   const float		rValue)
{
	SlowMul(V, rValue);
}

//-----------------------------------------------------------------------------
//	Name:		MulGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::MulGen(const float	rValue)
{
	SlowMul(rValue);
}


//-----------------------------------------------------------------------------
//	Name:		OpAddAssignGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR &	VECTOR::OpAddAssignGen(const VECTOR &	V)
{
	return	(SlowAddAssign(V));
}

//-----------------------------------------------------------------------------
//	Name:		OpAddGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR	VECTOR::OpAddGen(const VECTOR &	V) const
{
	return SlowAdd(V);
}

//-----------------------------------------------------------------------------
//	Name:		OpSubAssignGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR &	VECTOR::OpSubAssignGen(const VECTOR &	V)
{
	return	(SlowSubAssign(V));
}

//-----------------------------------------------------------------------------
//	Name:		OpSubGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR	VECTOR::OpSubGen(const VECTOR &	V) const
{
	return	(SlowSub(V));
}

//-----------------------------------------------------------------------------
//	Name:		OpMinusUnaryGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR	VECTOR::OpMinusUnaryGen() const
{
	return	(SlowMinusUnaryOp());
}

//-----------------------------------------------------------------------------
//	Name:		OpMulAssignGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR &	VECTOR::OpMulAssignGen(float	rValue)
{
	return	(SlowMulAssign(rValue));
}

//-----------------------------------------------------------------------------
//	Name:		OpMulGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR	VECTOR::OpMulGen(float	rValue) const
{
	return	(SlowMul(rValue));
}

//-----------------------------------------------------------------------------
//	Name:		OpDivGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR	VECTOR::OpDivGen(const float	rValue) const
{
	QDT_ASSERT( rValue != 0);
	return (*this * (1.0f / rValue));
}

//-----------------------------------------------------------------------------
//	Name:		OpDivAssignGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
VECTOR &	VECTOR::OpDivAssignGen(const float	rValue)
{
	QDT_ASSERT( rValue != 0);
	*this *= (1.0f / rValue);
	return (*this);
}

//-----------------------------------------------------------------------------
//	Name:		CrossGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::CrossGen(const VECTOR &	V1,
						 const VECTOR &	V2)
{
	SlowCross(V1, V2);
}

//-----------------------------------------------------------------------------
//	Name:		DotGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
float	VECTOR::DotGen(const VECTOR &	V) const
{
	return	(SlowDot(V));
}

//-----------------------------------------------------------------------------
//	Name:		ZeroGen
//	Object:		
//	06-03-09:	VMA - Created
//-----------------------------------------------------------------------------
void	VECTOR::ZeroGen()
{
	SlowZero();
}

//=============================================================================
// CODE ENDS HERE
//=============================================================================
